
package Visão;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class MenuCliente extends javax.swing.JFrame {

    /**
     * Creates new form MenuCliente
     */
    public MenuCliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cadastrar = new javax.swing.JButton();
        voltar = new javax.swing.JButton();
        pesquisar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 400));
        setResizable(false);
        setSize(new java.awt.Dimension(400, 400));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("MENU CLIENTE");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(100, 10, 190, 50);

        cadastrar.setBackground(new java.awt.Color(94, 63, 32));
        cadastrar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cadastrar.setText("Cadastrar");
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });
        getContentPane().add(cadastrar);
        cadastrar.setBounds(80, 120, 230, 40);

        voltar.setBackground(new java.awt.Color(255, 250, 250));
        voltar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        voltar.setText("Voltar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });
        getContentPane().add(voltar);
        voltar.setBounds(130, 310, 120, 30);

        pesquisar.setBackground(new java.awt.Color(94, 63, 32));
        pesquisar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        pesquisar.setText("Pesquisar");
        pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(pesquisar);
        pesquisar.setBounds(80, 200, 230, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/WhatsApp Image 2022-06-30 at 09.28.25 (1).jpeg"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(-30, -150, 510, 640);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        CadastroCliente CC = new CadastroCliente();
        CC.setVisible(true);
    }//GEN-LAST:event_cadastrarActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        dispose();
    }//GEN-LAST:event_voltarActionPerformed

    private void pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarActionPerformed
        String nome = null;
        String telefone = null;
        String cpf = null;
        String endereço = null;
        
        String N = JOptionPane.showInputDialog("Digite o CPF do cliente que deseja pesquisar: \n");

        try{

            String url = "jdbc:mysql://localhost/projetointegrador";
            String sqlPesquisar = "SELECT * FROM Cliente WHERE CPF='"+N+"'";

            Connection conexao = DriverManager.getConnection(url,"root","");
            PreparedStatement pesquisa = conexao.prepareStatement(sqlPesquisar);         
            ResultSet resultado = pesquisa.executeQuery();
            
            while (resultado.next()) {
            nome  = resultado.getString("Nome");
            telefone  = resultado.getString("Telefone");
            cpf  = resultado.getString("CPF");
            endereço = resultado.getString("Endereço");

        }
                JOptionPane.showMessageDialog(null,"Dados encontrados com sucesso!\n"+
                                                    "------------------------------\n"+
                                                    "Nome: "+nome+"\n"+
                                                    "Telefone: "+telefone+"\n"+
                                                    "CPF: "+cpf+"\n"+
                                                    "Endereço: "+endereço+"\n"+
                                                    "------------------------------");
                }

            catch(Exception erro) { 
                JOptionPane.showMessageDialog(null,"Erro na Conexão com Banco de Dados : "+erro);
           }

                String Opc = JOptionPane.showInputDialog( "O que deseja fazer? \n"+
                                                           "-------------------------\n"+
                                                            "1 - Atualizar\n"+                            
                                                            "2 - Excluir \n"+
                                                            "----------------------------");

                switch (Opc) {

                    case "1":

                       String O = JOptionPane.showInputDialog("O que deseja atualizar?\n"+
                                                              "-------------------------\n"+
                                                              "1- Nome\n"+
                                                              "2- Telefone\n"+
                                                              "3- CPF\n"+
                                                              "4- Endereço\n"+
                                                              "-------------------------\n");

                       //String N1 = JOptionPane.showInputDialog("Digite o novo Titulo");
                       switch (O){

                           case "1":

                            String N1 = JOptionPane.showInputDialog("Digite o novo nome do cliente: ");

                            String url = "jdbc:mysql://localhost/projetointegrador";

                            

                            //Update do título na tabela livros puxando pelo titulo que foi o que foi passado lá em cima

                            String sqlUpdateTL = "UPDATE Cliente SET Nome='"+N1+"' WHERE CPF='"+N+"'";

                            

                            //Update do titulo na tabela clientes 

                            //String sqlUpdateTC = "UPDATE clientes SET Titulo='"+N1+"' WHERE titulo='"+N+"'";



       try{

         Connection conexao = DriverManager.getConnection(url, "root","");

         PreparedStatement atualizar = conexao.prepareStatement(sqlUpdateTL);

             //PreparedStatement atualizar2 = conexao.prepareStatement(sqlUpdateTC);

         atualizar.executeUpdate();
//atualizar2.executeUpdate();

         JOptionPane.showMessageDialog(null,"Atualizado com sucesso!");

       }

       catch(Exception erro){ 

              JOptionPane.showMessageDialog(null,"Erro na Conexão com Banco de Dados : "+erro);

                       }

           break;

                           case "2":

                               String N2 = JOptionPane.showInputDialog("Digite o novo Telefone do cliente: ");

                               url = "jdbc:mysql://localhost/projetointegrador";

                            String sqlUpdateTelefone = "UPDATE Cliente SET Telefone='"+N2+"' WHERE CPF='"+N+"'"; 

       try{

         Connection conexao = DriverManager.getConnection(url, "root","");
         PreparedStatement atualizar = conexao.prepareStatement(sqlUpdateTelefone);
         atualizar.executeUpdate();
         JOptionPane.showMessageDialog(null,"Atualizado com sucesso!");

    

       }

       catch(Exception erro){ 
              JOptionPane.showMessageDialog(null,"Erro na Conexão com Banco de Dados : "+erro);

                       }

           break;

                           case "3":

                            String N3 = JOptionPane.showInputDialog("Digite o novo CPF do cliente: ");

                            url = "jdbc:mysql://localhost/projetointegrador";

                            String sqlUpdateCPF = "UPDATE Cliente SET CPF='"+N3+"' WHERE CPF='"+N+"'"; 



       try{
         Connection conexao = DriverManager.getConnection(url, "root","");
         PreparedStatement atualizar = conexao.prepareStatement(sqlUpdateCPF);
         atualizar.executeUpdate();
         JOptionPane.showMessageDialog(null,"Atualizado com sucesso!");
       }

       catch(Exception erro){ 

              JOptionPane.showMessageDialog(null,"Erro na Conexão com Banco de Dados : "+erro);

                       }

           break;
                           case "4": 
                            String N4 = JOptionPane.showInputDialog("Digite o novo Endereço do cliente: ");

                               url = "jdbc:mysql://localhost/projetointegrador";

                            String sqlUpdateEndereço = "UPDATE Cliente SET Endereco='"+N4+"' WHERE CPF='"+N+"'"; 

       try{

         Connection conexao = DriverManager.getConnection(url, "root","");
         PreparedStatement atualizar = conexao.prepareStatement(sqlUpdateEndereço);
         atualizar.executeUpdate();
         JOptionPane.showMessageDialog(null,"Atualizado com sucesso!");

    

       }

       catch(Exception erro){ 
              JOptionPane.showMessageDialog(null,"Erro na Conexão com Banco de Dados : "+erro);

                       }

           break;

                       }

           break;


                    case "2":

                        try{

                            String url = "jdbc:mysql://localhost/projetointegrador";

                            String sqlDelete = "DELETE FROM Cliente where CPF = '"+N+"'";

                            Connection conexao = DriverManager.getConnection(url, "root","");
                            PreparedStatement deletar = conexao.prepareStatement(sqlDelete);
                            deletar.executeUpdate();
                            JOptionPane.showMessageDialog(null,"Deletado com sucesso!");
                            }

                        catch(Exception erro) { 
                        JOptionPane.showMessageDialog(null,"Erro na Conexão com Banco de Dados : "+erro);

                        }

                    break;
                }
    }//GEN-LAST:event_pesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton pesquisar;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
